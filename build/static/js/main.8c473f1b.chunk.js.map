{"version":3,"sources":["components/NavBar/NavBar.module.css","components/Editor/Editor.module.css","components/PostPrev/PostPrev.module.css","components/CommentForm/CommentForm.module.css","components/Loader/Loader.module.css","components/Posts/Posts.module.css","components/Authorization/Authorization.module.css","components/Toggle/Toggle.module.css","components/PostInfo/PostInfo.module.css","components/SinglePost/SinglePost.module.css","components/Comments/index.js","axios/index.js","helpers/setErrorText.js","store/actions/types.js","store/actions/posts.js","store/actions/comments.js","containers/CommentsContainer.js","store/actions/auth.js","helpers/useOutsideClick.js","components/Menu/index.js","components/NavBar/index.js","components/Header/index.js","helpers/dateFormatter.js","components/PostInfo/index.js","containers/PostInfoContainer.js","components/CommentForm/index.js","components/Editor/index.js","helpers/HTMLtoReactParser.js","components/SinglePost/index.js","containers/SinglePostContainer.js","components/PostPrev/index.js","components/Loader/index.js","components/Posts/index.js","containers/PostsContainer.js","components/Home/index.js","components/MyPosts/index.js","components/PostEditor/index.js","helpers/vaildateAll.js","components/Toggle/index.js","components/Authorization/index.js","containers/AuthoizationContainer.js","components/PrivateRoute/index.js","components/SomeUserPosts/index.js","store/actions/users.js","components/AdminPanel/index.js","App.js","store/reducers/posts.js","store/reducers/auth.js","store/reducers/users.js","store/reducers/comments.js","store/reducers/index.js","index.js","components/Comments/Comments.module.css","components/Header/Header.module.css","components/Menu/Menu.module.css"],"names":["module","exports","Comments","props","comments","adminPanel","userId","isAdmin","approveCommentHandler","removeCommentHandler","className","classes","main","map","comment","i","approved","key","to","owner","_id","login","text","buttons","remove","onClick","require","config","instance","axios","create","baseURL","process","interceptors","request","use","userInfo","localStorage","getItem","JSON","parse","token","headers","Authorization","setErrorText","e","title","response","status","data","console","error","Swal","fire","icon","showConfirmButton","timer","FETCH_POSTS_START","FETCH_POSTS_SUCCESS","FETCH_SINGLE_POST_START","FETCH_SINGLE_POST_SUCCESS","FETCH_SINGLE_POST_ERROR","SET_USER_INFO","ADD_COMMENT","REMOVE_COMMENT_ACTION","ADD_LIKE","REMOVE_LIKE","LOG_OUT","UPDATE_POST","GET_USER","SET_USER","GET_COMMENTS","REMOVE_COMMENT","APPROVE_COMMENT","fetchSinglePost","id","dispatch","a","async","get","singlePost","type","fetchPosts","posts","addLike","like","postId","isLiked","params","post","res","createPost","subtitle","imageUpload","file","FormData","append","removePost","delete","removeCommentAction","approveCommentAction","CommentsContainer","removeCommentFromSinglePostHandler","removeCommentFromAdminHandler","approveComment","this","getComments","user","Component","connect","state","auth","put","setUserInfo","payload","logOut","setItem","stringify","setUserAction","useOutsideClick","ref","callback","handleClick","current","contains","target","useEffect","document","addEventListener","removeEventListener","windowSize","windowWidth","isLoggedIn","useState","isMenuOpen","setIsMenuOpen","useRef","burger","links","style","width","close","exact","NavBar","navBar","Header","editing","onChangeHandler","placeholder","h1","value","onChange","small","p","dateFormatter","date","split","slice","reverse","join","PostInfo","disabled","commentClickHandler","likeClickHandler","crutch","string","picLink","postedBy","updatedAt","created_at","updatedTime","filter","length","likes","PostInfoContainer","setState","setTimeout","history","push","some","CommentForm","setValue","rows","submitHandler","TextEditor","model","setModel","contentBlock","htmlToDraft","body","contentState","ContentState","createFromBlockArray","contentBlocks","editorState","EditorState","createWithContent","onBlur","onBlurHandler","toolbar","image","alignmentEnabled","uploadEnabled","uploadCallback","link","src","onImageUploadHandler","inputAccept","previewImage","fontSize","options","wrapperClassName","editorClassName","onEditorStateChange","draftToHtml","convertToRaw","getCurrentContent","parser","htmlInput","HtmlToReactParser","HtmlToReact","Parser","SinglePost","isEditing","isCreating","submited","errors","onSave","isCommentsOpened","postRemoveHandler","cls","postBody","Object","values","err","wrap","HTMLtoReactParser","SinglePostContainer","commentData","setComment","match","createPostHandler","updatePostHandler","isNewCommentPosted","PostPrev","admin","onRemoveHandle","onApproveHandle","textWrapper","Spinner","color","height","Posts","loading","Loader","noPost","PostsContainer","home","postsForProps","Home","MyPosts","PostEditor","field","validateObject","replace","validateAll","updatePost","setSubtitle","setTitle","FormControlLabelPosition","left","Switch","disableRipple","checked","isChecked","setIsChecked","right","initialValues","password","validationSchema","signupSchema","onSubmit","registerButtonHandler","loginButtonHandler","isValid","touched","htmlFor","name","AuthorizationContainer","registerUser","loginUser","Yup","shape","min","max","required","PrivateRoute","component","rest","render","SomeUserPosts","getUser","users","AdminPanel","approvePost","App","path","initialState","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.8c473f1b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBar\":\"NavBar_navBar__36P4w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editorClassName\":\"Editor_editorClassName__3DS5i\",\"rdw-image-modal\":\"Editor_rdw-image-modal__6Upd_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"PostPrev_main__1cGXT\",\"textWrapper\":\"PostPrev_textWrapper__2D_1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"CommentForm_main__1JUni\",\"shadow-textarea\":\"CommentForm_shadow-textarea__383J3\",\"form-control\":\"CommentForm_form-control__Um0CK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Loader_main__gFDWN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noPost\":\"Posts_noPost__2-UrU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"Authorization_auth__UYznG\",\"buttons\":\"Authorization_buttons__2bA4G\",\"alert-danger\":\"Authorization_alert-danger__1S7d8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Toggle_main__2zxx1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postedBy\":\"PostInfo_postedBy__MwY5d\",\"main\":\"PostInfo_main__3aZXP\",\"like\":\"PostInfo_like__iu0IY\",\"comment\":\"PostInfo_comment__OtLV9\",\"picLink\":\"PostInfo_picLink__3uS9M\",\"buttons\":\"PostInfo_buttons__1NVcs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBody\":\"SinglePost_postBody__3cVcm\",\"buttons\":\"SinglePost_buttons__m3DAc\",\"editing\":\"SinglePost_editing__3X0B2\",\"wrap\":\"SinglePost_wrap__1JQuz\",\"errors\":\"SinglePost_errors__3g1NU\"};","import React from 'react';\nimport classes from './Comments.module.css';\nimport { NavLink } from 'react-router-dom';\nimport { AiOutlineDelete } from 'react-icons/ai';\nimport { TiTick } from 'react-icons/ti';\n\nexport default function Comments(props) {\n  const { comments, adminPanel, userId, isAdmin, approveCommentHandler, removeCommentHandler } = props;\n\n  return (\n    <div className={classes.main}>\n      {comments.map((comment, i) => {\n        return (\n          ((!adminPanel && comment.approved) || (adminPanel && !comment.approved)) && (\n            <div key={i} className={classes.comment}>\n              <NavLink to={`/users/${comment.owner._id}`}>{comment.owner.login} :</NavLink>\n              <span>{comment.text}</span>\n              {(comment.owner._id === userId || adminPanel || isAdmin) && (\n                <div className={classes.buttons}>\n                  {!comment.approved && (\n                    <button className={classes.remove} onClick={() => approveCommentHandler(comment._id)}>\n                      <TiTick />\n                    </button>\n                  )}\n                  <button className={classes.remove} onClick={() => removeCommentHandler(comment._id)}>\n                    <AiOutlineDelete />\n                  </button>\n                </div>\n              )}\n            </div>\n          )\n        );\n      })}\n    </div>\n  );\n}\n","import axios from 'axios';\nrequire('dotenv').config();\n\nexport const options = {\n  baseURL: process.env.REACT_APP_API_URL,\n};\nconst instance = axios.create(options);\n\ninstance.interceptors.request.use(function(config) {\n  let userInfo = localStorage.getItem('userInfo');\n  userInfo = JSON.parse(userInfo);\n  if (!userInfo.token) return config;\n  config.headers = { Authorization: 'Bearer ' + userInfo.token };\n\n  return config;\n});\n\nexport default instance;\n","import Swal from 'sweetalert2';\n\nexport default function setErrorText(e, title) {\n  let text = '';\n  if (e.response && e.response.status === 400) {\n    switch (e.response.data) {\n      case 'Validation error':\n        text = 'You must stick with validation rules';\n        break;\n      case 'Invalid token':\n        text = 'Your token is invalid';\n        break;\n      default:\n        text = 'Something went wrong';\n        break;\n    }\n  } else console.error(e);\n  Swal.fire({\n    icon: 'error',\n    title,\n    text,\n    showConfirmButton: true,\n    timer: 6000,\n  });\n}\n","export const FETCH_POSTS_START = 'FETCH_POSTS_START';\nexport const FETCH_POSTS_SUCCESS = 'FETCH_POSTS_SUCCESS';\nexport const FETCH_POSTS_ERROR = 'FETCH_POSTS_ERROR';\nexport const FETCH_SINGLE_POST_START = 'FETCH_SINGLE_POST_START';\nexport const FETCH_SINGLE_POST_SUCCESS = 'FETCH_SINGLE_POST_SUCCESS';\nexport const FETCH_SINGLE_POST_ERROR = 'FETCH_SINGLE_POST_ERROR';\nexport const SET_USER_INFO = 'SET_USER_INFO';\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const REMOVE_COMMENT_ACTION = 'REMOVE_COMMENT_ACTION';\nexport const ADD_LIKE = 'ADD_LIKE';\nexport const REMOVE_LIKE = 'REMOVE_LIKE';\nexport const LOG_OUT = 'LOG_OUT';\nexport const UPDATE_POST = 'UPDATE_POST';\nexport const GET_USER = 'GET_USER';\nexport const SET_USER = 'SET_USER';\nexport const GET_COMMENTS = 'GET_COMMENTS';\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT';\nexport const APPROVE_COMMENT = 'APPROVE_COMMENT';\n","/* eslint-disable consistent-return */\nimport Swal from 'sweetalert2';\nimport axios from '../../axios';\nimport setErrorText from '../../helpers/setErrorText';\nimport {\n  FETCH_POSTS_START,\n  FETCH_POSTS_SUCCESS,\n  FETCH_SINGLE_POST_SUCCESS,\n  ADD_LIKE,\n  REMOVE_LIKE,\n  UPDATE_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT_ACTION,\n} from './types';\n\nfunction fetchPostsStart() {\n  return {\n    type: FETCH_POSTS_START,\n  };\n}\n\nfunction fetchPostsSuccess(posts) {\n  return {\n    type: FETCH_POSTS_SUCCESS,\n    posts,\n  };\n}\n\nfunction fetchSinglePostSuccess(singlePost) {\n  return {\n    type: FETCH_SINGLE_POST_SUCCESS,\n    singlePost,\n  };\n}\n\nexport function fetchSinglePost(id) {\n  return async (dispatch) => {\n    try {\n      const response = await axios.get(`/posts/${id}`);\n      dispatch(fetchSinglePostSuccess(response.data));\n    } catch (e) {\n      setErrorText(e, 'Fetch single post error');\n    }\n  };\n}\n\nexport function fetchPosts() {\n  return async (dispatch) => {\n    dispatch(fetchPostsStart());\n    try {\n      const response = await axios.get('/posts');\n      dispatch(fetchPostsSuccess(response.data));\n    } catch (e) {\n      setErrorText(e, 'Fetch posts error');\n    }\n  };\n}\n\nfunction addComment(comment) {\n  return {\n    type: ADD_COMMENT,\n    comment,\n  };\n}\n\nexport function setComment(postId, text) {\n  return async (dispatch) => {\n    try {\n      const response = await axios.post('/comments', { text, postId });\n      dispatch(addComment(response.data));\n      Swal.fire({\n        icon: 'success',\n        title: 'Your comment is on check by admin',\n        showConfirmButton: false,\n        timer: 2000,\n      });\n    } catch (e) {\n      setErrorText(e, 'You have to login first');\n      return e;\n    }\n  };\n}\n\nfunction removeCommentAction(comment) {\n  return {\n    type: REMOVE_COMMENT_ACTION,\n    comment,\n  };\n}\n\nexport function removeCommentFromSinglePostHandler(id) {\n  return async (dispatch) => {\n    try {\n      const response = await axios.delete(`/comment/${id}`);\n      dispatch(removeCommentAction(response.data));\n    } catch (e) {\n      setErrorText(e, 'Remove comment error');\n    }\n  };\n}\n\nfunction addLike(like) {\n  return {\n    type: ADD_LIKE,\n    like,\n  };\n}\n\nfunction removeLike(like) {\n  return {\n    type: REMOVE_LIKE,\n    like,\n  };\n}\n\nexport function like(postId, isLiked) {\n  return async (dispatch) => {\n    try {\n      const params = { postId };\n      const res = await axios.post('/like', params);\n      if (isLiked) dispatch(removeLike(res.data));\n      else dispatch(addLike(res.data));\n    } catch (e) {\n      setErrorText(e, 'You have to login first');\n      return e;\n    }\n  };\n}\n\nfunction updatePostAction(data) {\n  return {\n    type: UPDATE_POST,\n    data,\n  };\n}\n\nexport function updatePost(title, subtitle, text, postId) {\n  return async (dispatch) => {\n    try {\n      const params = { title, subtitle, text };\n      await axios.put(`/posts/${postId}`, params);\n      dispatch(updatePostAction(params));\n      Swal.fire({\n        icon: 'success',\n        title: 'Your post is on check by admin',\n        showConfirmButton: false,\n        timer: 2000,\n      });\n    } catch (e) {\n      setErrorText(e, 'Updating post error');\n    }\n  };\n}\n\nexport async function createPost(title, subtitle, text) {\n  try {\n    const params = { title, subtitle, text };\n    const res = await axios.post('/posts/', params);\n    Swal.fire({\n      icon: 'success',\n      title: 'Your post is on check by admin',\n      showConfirmButton: false,\n      timer: 2000,\n    });\n    return res;\n  } catch (e) {\n    setErrorText(e, 'Creating post error');\n  }\n}\n\nexport async function imageUpload(file) {\n  try {\n    const data = new FormData();\n    data.append('pics', file);\n    return await axios.post('/upload', data);\n  } catch (e) {\n    setErrorText(e, 'Image uploading error');\n  }\n}\n\nexport function approvePost(postId) {\n  return async (dispatch) => {\n    try {\n      const params = { approved: true };\n      await axios.put(`/posts/${postId}`, params);\n      dispatch(fetchPosts());\n    } catch (e) {\n      setErrorText(e, 'Post approve error');\n    }\n  };\n}\n\nexport function removePost(postId) {\n  return async (dispatch) => {\n    try {\n      await axios.delete(`/posts/${postId}`);\n      dispatch(fetchPosts());\n      Swal.fire({\n        icon: 'success',\n        title: 'This post is successfully removed',\n        showConfirmButton: false,\n        timer: 2000,\n      });\n    } catch (e) {\n      setErrorText(e, 'Post remove error');\n    }\n  };\n}\n","import axios from '../../axios';\nimport { GET_COMMENTS, REMOVE_COMMENT, APPROVE_COMMENT } from './types';\n\nexport function getCommentsAction(comments) {\n  return {\n    type: GET_COMMENTS,\n    comments,\n  };\n}\n\nexport function getComments() {\n  return async (dispatch) => {\n    try {\n      const res = await axios.get('/comments');\n      dispatch(getCommentsAction(res.data));\n    } catch (e) {\n      console.error('get all comments error: ', e);\n    }\n  };\n}\n\nexport function removeCommentAction(id) {\n  return {\n    type: REMOVE_COMMENT,\n    id,\n  };\n}\n\nexport function removeCommentFromAdminHandler(id) {\n  return async (dispatch) => {\n    try {\n      await axios.delete(`/comment/${id}`);\n      dispatch(removeCommentAction(id));\n    } catch (e) {\n      console.error('Remove comment error', e);\n    }\n  };\n}\n\nexport function approveCommentAction(id) {\n  return {\n    type: APPROVE_COMMENT,\n    id,\n  };\n}\n\nexport function approveComment(id) {\n  return async (dispatch) => {\n    try {\n      await axios.put(`/comment/${id}`, {});\n      dispatch(approveCommentAction(id));\n    } catch (e) {\n      console.error('Approve comment error', e);\n    }\n  };\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Comments from '../components/Comments';\nimport { removeCommentFromSinglePostHandler } from '../store/actions/posts';\nimport { removeCommentFromAdminHandler, approveComment, getComments } from '../store/actions/comments';\n\nclass CommentsContainer extends Component {\n  componentDidMount() {\n    if (this.props.adminPanel) this.props.getComments();\n  }\n\n  removeCommentFromSinglePostHandler = (id) => {\n    this.props.removeCommentFromSinglePostHandler(id);\n  };\n\n  removeCommentFromAdminHandler = (id) => {\n    this.props.removeCommentFromAdminHandler(id);\n  };\n\n  approveCommentHandler = (id) => {\n    this.props.approveComment(id);\n  };\n\n  render() {\n    return (\n      <Comments\n        removeCommentHandler={\n          this.props.adminPanel ? this.removeCommentFromAdminHandler : this.removeCommentFromSinglePostHandler\n        }\n        comments={this.props.adminPanel ? this.props.comments : this.props.singlePost.comments}\n        userId={this.props.userId}\n        isAdmin={this.props.user.isAdmin}\n        adminPanel={this.props.adminPanel}\n      />\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    singlePost: state.posts.singlePost,\n    userId: state.auth.userId,\n    user: state.auth.user,\n    comments: state.comments.comments,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    removeCommentFromSinglePostHandler: (id) => dispatch(removeCommentFromSinglePostHandler(id)),\n    removeCommentFromAdminHandler: (id) => dispatch(removeCommentFromAdminHandler(id)),\n    approveComment: (id) => dispatch(approveComment(id)),\n    getComments: () => dispatch(getComments()),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentsContainer);\n","import { SET_USER_INFO, LOG_OUT, SET_USER } from './types';\nimport axios from '../../axios';\nimport Swal from 'sweetalert2';\nimport setErrorText from '../../helpers/setErrorText';\n\nexport function loginUser(login, password) {\n  return async dispatch => {\n    try {\n      const res = await axios.post('/login', {\n        login,\n        password\n      });\n      dispatch(setUserInfo(res.data.token, res.data.userId));\n      const userInfo = {\n        token: res.data.token,\n        userId: res.data.userId\n      };\n      localStorage.setItem('userInfo', JSON.stringify(userInfo));\n      const response = await axios.get(`/users/${res.data.userId}`);\n      localStorage.setItem('user', JSON.stringify(response.data));\n      dispatch(setUserAction(response.data));\n      Swal.fire({\n        icon: 'success',\n        title: 'You are successfully logged in',\n        showConfirmButton: false,\n        timer: 2000\n      });\n    } catch (e) {\n      setErrorText(e, 'Auth error');\n    }\n  };\n}\n\nexport function registerUser(login, password) {\n  return async dispatch => {\n    try {\n      const res = await axios.post('/register', {\n        login,\n        password\n      });\n      dispatch(setUserInfo(res.data.token, res.data.userId));\n      const userInfo = {\n        token: res.data.token,\n        userId: res.data.userId\n      };\n      localStorage.setItem('userInfo', JSON.stringify(userInfo));\n      const response = await axios.get(`/users/${res.data.userId}`);\n      localStorage.setItem('user', JSON.stringify(response.data));\n      dispatch(setUserAction(response.data));\n      Swal.fire({\n        icon: 'success',\n        title: 'Registration complete',\n        showConfirmButton: false,\n        timer: 2000\n      });\n    } catch (e) {\n      setErrorText(e, 'Auth error');\n    }\n  };\n}\n\nexport function setUserInfo(token, userId) {\n  return {\n    type: SET_USER_INFO,\n    payload: { token, userId }\n  };\n}\n\nexport function logOut() {\n  return dispatch => {\n    localStorage.setItem('userInfo', JSON.stringify({}));\n    localStorage.setItem('user', JSON.stringify({}));\n    dispatch(logOutAction());\n    dispatch(setUserAction({}));\n    Swal.fire({\n      icon: 'success',\n      title: 'You are successfully logged out',\n      showConfirmButton: false,\n      timer: 2000\n    });\n  };\n}\n\nexport function logOutAction() {\n  return {\n    type: LOG_OUT\n  };\n}\n\nexport function setUserAction(user) {\n  return {\n    type: SET_USER,\n    user\n  };\n}\n","import { useEffect } from 'react';\n\nconst useOutsideClick = (ref, callback) => {\n  const handleClick = e => {\n    if (ref.current && !ref.current.contains(e.target)) {\n      callback();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('click', handleClick);\n\n    return () => {\n      document.removeEventListener('click', handleClick);\n    };\n  });\n};\n\nexport default useOutsideClick;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classes from './Menu.module.css';\nimport { GiHamburgerMenu } from 'react-icons/gi';\nimport windowSize from 'react-window-size';\nimport useOutsideClick from '../../helpers/useOutsideClick';\n\nconst Menu = (props) => {\n  const { windowWidth, isLoggedIn, isAdmin, logOut } = props;\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const ref = useRef();\n\n  useEffect(() => {\n    if (windowWidth < 768) {\n      setIsMenuOpen(false);\n    }\n  }, [windowWidth]);\n\n  useOutsideClick(ref, () => {\n    if (!isMenuOpen) return;\n    setIsMenuOpen(!isMenuOpen);\n  });\n  return (\n    <div className={classes.main}>\n      {windowWidth < 768 && !isMenuOpen && (\n        <button className={classes.burger} onClick={() => setIsMenuOpen(true)}>\n          <GiHamburgerMenu />\n        </button>\n      )}\n      <ul\n        ref={ref}\n        className={classes.links}\n        style={windowWidth > 768 ? { width: 'auto' } : isMenuOpen ? { width: '200px' } : { width: '0px' }}\n      >\n        {isMenuOpen && windowWidth < 768 && (\n          <li>\n            <button className={classes.close} onClick={() => setIsMenuOpen(false)}>\n              x\n            </button>\n          </li>\n        )}\n        <li>\n          <NavLink exact to=\"/\">\n            HOME\n          </NavLink>\n        </li>\n        {isLoggedIn && (\n          <li>\n            <NavLink to=\"/post-edit/5e078a17a004ad000439a5ea\">ADD POST</NavLink>\n          </li>\n        )}\n        {isLoggedIn && (\n          <li>\n            <NavLink to=\"/my-posts\">MY POSTS</NavLink>\n          </li>\n        )}\n        <li>{isAdmin && <NavLink to=\"/admin\">ADMIN</NavLink>}</li>\n        <li>\n          {isLoggedIn ? (\n            <NavLink to=\"/\" onClick={() => logOut()}>\n              LOG OUT\n            </NavLink>\n          ) : (\n            <NavLink to=\"/authorization\">AUTHORIZATION</NavLink>\n          )}\n        </li>\n      </ul>\n    </div>\n  );\n};\nexport default windowSize(Menu);\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classes from './NavBar.module.css';\nimport { connect } from 'react-redux';\nimport { logOut } from '../../store/actions/auth';\nimport Menu from '../Menu';\n\nclass NavBar extends Component {\n  render() {\n    return (\n      <div className={classes.main}>\n        <nav className={classes.navBar}>\n          <div>\n            <NavLink exact to=\"/\">\n              Your diary\n            </NavLink>\n          </div>\n          <Menu\n            isAdmin={this.props.user.isAdmin}\n            isLoggedIn={this.props.isLoggedIn}\n            logOut={this.props.logOut}\n          />\n        </nav>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isLoggedIn: state.auth.isLoggedIn,\n    user: state.auth.user,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    logOut: () => dispatch(logOut()),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);\n","import React from 'react';\nimport classes from './Header.module.css';\nimport NavBar from '../NavBar';\n\nexport default function Header(props) {\n  const {editing, onChangeHandler, title, subtitle } = props;\n  return (\n    <div className={classes.main}>\n      <NavBar></NavBar>\n      <div>\n        {editing ? (\n          <input\n            placeholder=\"Title\"\n            className={classes.h1}\n            type=\"text\"\n            value={title}\n            onChange={(e) => onChangeHandler('title', e.target.value)}\n          />\n        ) : (\n          <h1>{title}</h1>\n        )}\n        <hr className={classes.small} />\n        {editing ? (\n          <input\n            placeholder=\"Subtitle\"\n            className={classes.p}\n            type=\"text\"\n            value={subtitle}\n            onChange={(e) => onChangeHandler('subtitle', e.target.value)}\n          />\n        ) : (\n          <p>{subtitle}</p>\n        )}\n      </div>\n    </div>\n  );\n}\n","export default function dateFormatter(date) {\n  let res = date.split('T');\n  res[1] = res[1].slice(0, -8);\n  return res.reverse().join(' ');\n}\n","import React from 'react';\nimport classes from './PostInfo.module.css';\nimport { NavLink } from 'react-router-dom';\nimport { FaRegHeart } from 'react-icons/fa';\nimport { FaHeart } from 'react-icons/fa';\nimport { FaRegComment } from 'react-icons/fa';\nimport dateFormatter from '../../helpers/dateFormatter';\n\nconst PostInfo = (props) => {\n  const { disabled, commentClickHandler, isLiked, post, likeClickHandler } = props;\n  function crutch(string) {\n    switch (string) {\n      case 'comment':\n        if (disabled) {\n          return (\n            <NavLink className={classes.picLink} to={`/post/${post._id}`}>\n              <FaRegComment />\n            </NavLink>\n          );\n        }\n        return (\n          <div onClick={commentClickHandler}>\n            <FaRegComment />\n          </div>\n        );\n      case 'like':\n        if (disabled) {\n          if (isLiked) {\n            return (\n              <NavLink className={classes.picLink} to={`/post/${post._id}`}>\n                <FaHeart />\n              </NavLink>\n            );\n          }\n          return (\n            <NavLink className={classes.picLink} to={`/post/${post._id}`}>\n              <FaRegHeart />\n            </NavLink>\n          );\n        }\n        if (isLiked) {\n          return (\n            <div\n              onClick={() => {\n                likeClickHandler(post._id);\n              }}\n            >\n              <FaHeart />\n            </div>\n          );\n        }\n        return (\n          <div\n            onClick={() => {\n              likeClickHandler(post._id);\n            }}\n          >\n            <FaRegHeart />\n          </div>\n        );\n      default:\n        return null;\n    }\n  }\n  return (\n    <div className={classes.main}>\n      <p className={classes.postedBy}>\n        Posted by <NavLink to={`/user-posts/${post.owner._id}`}>{post.owner.login}</NavLink>{' '}\n        {post.updatedAt && post.created_at.slice(0, 16) !== post.updatedAt.slice(0, 16) ? 'updated ' : ''}\n        at {post.updatedTime ? dateFormatter(post.updatedAt) : dateFormatter(post.created_at)}\n      </p>\n      <span className={classes.comment}>\n        <span>{post.comments.filter((comment) => comment.approved).length}</span> {crutch('comment')}\n      </span>\n      <span className={classes.like}>\n        <span>{post.likes.length}</span>\n        {crutch('like')}\n      </span>\n      <hr />\n    </div>\n  );\n};\n\nexport default PostInfo;\n","import React, { Component } from 'react';\nimport PostInfo from '../components/PostInfo';\nimport { connect } from 'react-redux';\nimport { like } from '../store/actions/posts';\n\nclass PostInfoContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLiked: this.props.post.likes.some((e) => e.owner === this.props.userId),\n    };\n  }\n  likeClickHandler = async (id) => {\n    const res = await this.props.like(id, this.props.isLiked);\n    this.setState({\n      isLiked: !this.state.isLiked,\n    });\n    if (res) setTimeout(() => this.props.history.push('/authorization'), 2000);\n  };\n\n  render() {\n    return (\n      <PostInfo\n        disabled={this.props.disabled}\n        likeClickHandler={this.likeClickHandler}\n        isLiked={this.props.isLiked}\n        post={this.props.post}\n        commentClickHandler={this.props.commentClickHandler}\n      />\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    like: (postId, isLiked) => dispatch(like(postId, isLiked)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostInfoContainer);\n","import React, { useState } from 'react';\nimport classes from './CommentForm.module.css';\n\nexport default function CommentForm(props) {\n  const [value, setValue] = useState('');\n\n  return (\n    <div className={classes.main}>\n      <div className=\"form-group shadow-textarea\">\n        <textarea\n          value={value}\n          className=\"form-control z-depth-1\"\n          id=\"exampleFormControlTextarea6\"\n          rows=\"3\"\n          placeholder=\"Write your comment here...\"\n          onChange={(e) => setValue(e.target.value)}\n        ></textarea>\n      </div>\n      <div className=\"col-auto\">\n        <button\n          type=\"submit\"\n          className=\"btn btn-primary mb-2\"\n          onClick={() => {\n            props.submitHandler(value);\n            setValue(' ');\n          }}\n        >\n          Send\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport './react-draft.css';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\nimport classes from './Editor.module.css';\nimport { imageUpload } from '../../store/actions/posts';\n\nconst TextEditor = (props) => {\n  const [model, setModel] = useState('');\n\n  useEffect(() => {\n    const contentBlock = htmlToDraft(props.body);\n    const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\n    const editorState = EditorState.createWithContent(contentState);\n    setModel(editorState);\n  }, [props.body]);\n\n  async function onImageUploadHandler(file) {\n    const res = await imageUpload(file, props.token);\n    return { data: { link: res.data.src } };\n  }\n\n  function onEditorStateChange(editorState) {\n    setModel(editorState);\n    props.onChangeHandler('text', draftToHtml(convertToRaw(editorState.getCurrentContent())));\n  }\n  return (\n    <Editor\n      onBlur={props.onBlurHandler}\n      editorState={model}\n      toolbar={{\n        image: {\n          alignmentEnabled: false,\n          uploadEnabled: true,\n          uploadCallback: (data) => onImageUploadHandler(data),\n          inputAccept: 'image/jpeg,image/jpg,image/png',\n          previewImage: true,\n        },\n        fontSize: {\n          options: [8, 9, 10, 11, 12, 14, 16, 18, 24, 30, 36],\n        },\n      }}\n      wrapperClassName={classes.wrapperClassName}\n      editorClassName={classes.editorClassName}\n      onEditorStateChange={onEditorStateChange}\n      uploadEnabled={true}\n    />\n  );\n};\n\nexport default TextEditor;\n","import HtmlToReact from 'html-to-react';\n\nexport default function parser(htmlInput) {\n  const HtmlToReactParser = HtmlToReact.Parser;\n  const htmlToReactParser = new HtmlToReactParser();\n  return htmlToReactParser.parse(htmlInput);\n}\n","import React from 'react';\nimport classes from './SinglePost.module.css';\nimport Comments from '../../containers/CommentsContainer';\nimport Header from '../Header';\nimport PostInfo from '../../containers/PostInfoContainer';\nimport CommentForm from '../CommentForm';\nimport { NavLink } from 'react-router-dom';\nimport TextEditor from '../Editor';\nimport HTMLtoReactParser from '../../helpers/HTMLtoReactParser';\n\nconst SinglePost = (props) => {\n  const {\n    isEditing,\n    post,\n    subtitle,\n    title,\n    onChangeHandler,\n    token,\n    isCreating,\n    submited,\n    errors,\n    onSave,\n    user,\n    userId,\n    commentClickHandler,\n    isCommentsOpened,\n    postRemoveHandler,\n    submitHandler,\n  } = props;\n  const cls = [classes.postBody];\n  isEditing && cls.push(classes.editing);\n  return post.title ? (\n    <div className={classes.main}>\n      <Header\n        subtitle={isEditing ? subtitle : post.subtitle}\n        title={isEditing ? title : post.title}\n        onChangeHandler={onChangeHandler}\n        editing={isEditing}\n      />\n      <div className={cls.join(' ')}>\n        {isEditing ? (\n          <div>\n            <TextEditor token={token} body={isCreating ? ' ' : post.text} onChangeHandler={onChangeHandler} />\n            <ul className={classes.errors}>\n              {submited &&\n                Object.values(errors).map(\n                  (err, i) =>\n                    err !== false && (\n                      <li key={i} className=\"alert alert-danger\">\n                        {err}\n                      </li>\n                    ),\n                )}\n            </ul>\n            <button type=\"button\" className=\"btn btn-success\" onClick={() => onSave(post)}>\n              Save\n            </button>\n          </div>\n        ) : (\n          <div>\n            <div className={classes.wrap}>{HTMLtoReactParser(post.text)}</div>\n            <PostInfo post={post} userId={userId} commentClickHandler={commentClickHandler} />\n          </div>\n        )}\n        {!isEditing && isCommentsOpened && <Comments />}\n        {!isEditing && (user.isAdmin || post.owner._id === userId) && (\n          <div className={classes.buttons}>\n            <NavLink type=\"button\" className=\"btn btn-success\" to={`/post-edit/${post._id}`}>\n              Edit\n            </NavLink>\n            <NavLink type=\"button\" className=\"btn btn-danger\" onClick={() => postRemoveHandler()} to=\"/\">\n              Remove\n            </NavLink>\n          </div>\n        )}\n        {!isEditing && <CommentForm submitHandler={submitHandler} />}\n      </div>\n    </div>\n  ) : null;\n};\n\nexport default SinglePost;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport SinglePost from '../components/SinglePost';\nimport { fetchSinglePost, removePost, setComment } from '../store/actions/posts';\n\nclass SinglePostContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isCommentsOpened: false,\n    };\n  }\n\n  componentDidMount() {\n    this.props.match\n      ? this.props.fetchSinglePost(this.props.match.params.id)\n      : this.props.fetchSinglePost(this.props.id);\n  }\n\n  submitHandler = async (commentData) => {\n    const res = await this.props.setComment(this.props.match.params.id, commentData);\n    this.setState({\n      isCommentsOpened: true,\n    });\n    if (res) setTimeout(() => this.props.history.push('/authorization'), 2000);\n  };\n\n  commentClickHandler = () => this.setState({ isCommentsOpened: !this.state.isCommentsOpened });\n\n  postRemoveHandler = () => {\n    this.props.removePost(this.props.singlePost._id);\n  };\n\n  render() {\n    return (\n      <SinglePost\n        errors={this.props.errors}\n        submited={this.props.submited}\n        onChangeHandler={this.props.onChangeHandler}\n        onSave={this.props.onSave}\n        postId={this.props.postId}\n        createPostHandler={this.props.createPostHandler}\n        isCreating={this.props.isCreating}\n        user={this.props.user}\n        postRemoveHandler={this.postRemoveHandler}\n        updatePostHandler={this.props.updatePostHandler}\n        subtitle={this.props.subtitle}\n        title={this.props.title}\n        text={this.props.text}\n        isEditing={this.props.isEditing}\n        post={this.props.singlePost}\n        userId={this.props.userId}\n        commentClickHandler={this.commentClickHandler}\n        token={this.props.token}\n        isCommentsOpened={this.state.isCommentsOpened}\n        isNewCommentPosted={this.state.isNewCommentPosted}\n        removeCommentHandler={this.removeCommentHandler}\n        submitHandler={this.submitHandler}\n        likeClickHandler={this.likeClickHandler}\n      />\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    singlePost: state.posts.singlePost,\n    userId: state.auth.userId,\n    token: state.auth.token,\n    user: state.auth.user,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchSinglePost: (id) => dispatch(fetchSinglePost(id)),\n    removePost: (id) => dispatch(removePost(id)),\n    setComment: (postId, text) => dispatch(setComment(postId, text)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SinglePostContainer);\n","import React from 'react';\nimport classes from './PostPrev.module.css';\nimport { NavLink } from 'react-router-dom';\nimport PostInfo from '../../containers/PostInfoContainer';\nimport { MdDelete } from 'react-icons/md';\nimport { TiTick } from 'react-icons/ti';\nimport HTMLtoReactParser from '../../helpers/HTMLtoReactParser';\n\nexport default function PostPrev(props) {\n  const {post, admin, onRemoveHandle, onApproveHandle, likeClickHandler, userId} = props;\n  const body = (\n    <div className={classes.main}>\n      <NavLink to={`/post/${post._id}`}>\n        <h1>{post.title}</h1>\n        <div className={classes.textWrapper}>{HTMLtoReactParser(post.text)}</div>\n      </NavLink>\n      <PostInfo\n        disabled={true}\n        post={post}\n        userId={userId}\n        likeClickHandler={likeClickHandler}\n      ></PostInfo>\n      {admin && (\n        <div>\n          <button\n            type=\"button\"\n            className=\"btn btn-danger\"\n            onClick={() => onRemoveHandle(post._id)}\n          >\n            <MdDelete />\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-success\"\n            onClick={() => onApproveHandle(post._id)}\n          >\n            <TiTick />\n          </button>\n        </div>\n      )}\n    </div>\n  );\n  if (admin) return !post.approved && body;\n  return post.approved && body;\n}\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\nimport classes from './Loader.module.css';\n\nconst Spinner = () => {\n  return (\n    <div className={classes.main}>\n      <Loader type=\"Puff\" color=\"#333333\" height={100} width={100} />\n    </div>\n  );\n};\nexport default Spinner;\n","import React from 'react';\nimport PostPrev from '../PostPrev';\nimport Loader from '../Loader';\nimport { NavLink } from 'react-router-dom';\nimport classes from './Posts.module.css';\n\nconst Posts = (props) => {\n  return props.loading ? (\n    <Loader />\n  ) : (\n    <div>\n      {props.posts.filter((post) => post.approved !== null).length ? (\n        props.posts.map((post, i) => (\n          <PostPrev\n            onApproveHandle={props.onApproveHandle}\n            onRemoveHandle={props.onRemoveHandle}\n            admin={props.admin}\n            key={i}\n            post={post}\n            userId={props.userId}\n            likeClickHandler={props.likeClickHandler}\n          ></PostPrev>\n        ))\n      ) : (\n        <div className={classes.noPost}>\n          <h1>You have no published posts yet</h1>\n          <hr />\n          <NavLink type=\"button\" className=\"btn btn-primary\" to=\"/post-edit/5e078a17a004ad000439a5ea\">\n            ADD POST\n          </NavLink>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Posts;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Posts from '../components/Posts';\nimport { fetchPosts, like } from '../store/actions/posts';\n\nclass PostsContainer extends Component {\n  componentDidMount() {\n    this.props.fetchPosts();\n  }\n\n  likeClickHandler = (id, isLiked) => {\n    this.props.like(id, isLiked);\n  };\n\n  render() {\n    const { userId, posts, home, loading, admin } = this.props;\n    const id = this.props.id || userId;\n    const postsForProps = home\n      ? admin\n        ? posts.filter((post) => post.approved === null)\n        : posts\n      : posts.filter((post) => post.owner._id === id);\n    return posts.length ? (\n      <Posts\n        onApproveHandle={this.props.onApproveHandle}\n        onRemoveHandle={this.props.onRemoveHandle}\n        admin={admin}\n        loading={loading}\n        likeClickHandler={this.likeClickHandler}\n        posts={postsForProps}\n        userId={userId}\n      />\n    ) : (\n      <h1>It looks like the server is offline</h1>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    posts: state.posts.posts,\n    loading: state.posts.loading,\n    userId: state.auth.userId,\n    user: state.auth.user,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchPosts: () => dispatch(fetchPosts()),\n    like: (postId, isLiked) => dispatch(like(postId, isLiked)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostsContainer);\n","import React from 'react';\nimport Posts from '../../containers/PostsContainer';\nimport Header from '../Header';\n\nconst Home = () => {\n  return (\n    <div>\n      <Header title=\"Clean Blog\" subtitle=\"A Clean Blog Theme by Start Bootstrap\"></Header>\n      <Posts home={true} />\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport Posts from '../../containers/PostsContainer';\nimport Header from '../Header';\n\nconst MyPosts = () => {\n  return (\n    <div>\n      <Header title=\"My posts\" subtitle=\"Here you can see your posts\"></Header>\n      <Posts />\n    </div>\n  );\n};\n\nexport default MyPosts;\n","import React, { Component } from 'react';\nimport SinglePost from '../../containers/SinglePostContainer';\nimport { connect } from 'react-redux';\nimport { fetchSinglePost, updatePost, createPost } from '../../store/actions/posts';\nimport validateAll from '../../helpers/vaildateAll';\n\nclass PostEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '',\n      subtitle: '',\n      title: '',\n      isCreating: this.props.match.params.id === '5e078a17a004ad000439a5ea',\n      errors: {},\n      submited: false,\n    };\n  }\n\n  async componentDidMount() {\n    this.props.match\n      ? await this.props.fetchSinglePost(this.props.match.params.id)\n      : await this.props.fetchSinglePost(this.props.id);\n    this.setState({\n      text: this.state.isCreating ? ' ' : this.props.singlePost.text,\n      subtitle: this.props.singlePost.subtitle,\n      title: this.props.singlePost.title,\n    });\n  }\n\n  onChangeHandler = (field, value) => {\n    this.setState({\n      [field]: value,\n      errors: {\n        ...this.state.errors,\n        [field]: !validateAll(field, value) && `${field} lenght is not valid`,\n      },\n    });\n  };\n\n  updatePostHandler = () => {\n    this.props.updatePost(\n      this.state.title,\n      this.state.subtitle,\n      this.state.text.replace(/<(?<tag>.*?)[^>]*>((\\s*?)|(<\\/?[^>]*>)|(&[^;]*;))<\\/\\k<tag>>/gi, ''),\n      this.props.singlePost._id,\n    );\n    this.props.history.push(`/post/${this.props.singlePost._id}`);\n  };\n  createPostHandler = async () => {\n    const res = await createPost(\n      this.state.title,\n      this.state.subtitle,\n      this.state.text.replace(/<(?<tag>.*?)[^>]*>((\\s*?)|(<\\/?[^>]*>)|(&[^;]*;))<\\/\\k<tag>>/gi, ''),\n    );\n    this.props.history.push(`/post/${res.data._id}`);\n  };\n\n  onSave = (post) => {\n    this.setState({\n      submited: true,\n    });\n    if (Object.values(this.state.errors).filter((value) => value !== false).length) return;\n    post._id === '5e078a17a004ad000439a5ea' ? this.createPostHandler() : this.updatePostHandler();\n  };\n\n  render() {\n    return (\n      <SinglePost\n        errors={this.state.errors}\n        submited={this.state.submited}\n        onSave={this.onSave}\n        postId={this.state.postId}\n        createPostHandler={this.createPostHandler}\n        updatePostHandler={this.updatePostHandler}\n        subtitle={this.state.subtitle}\n        title={this.state.title}\n        setSubtitle={this.setSubtitle}\n        setTitle={this.setTitle}\n        text={this.state.text}\n        onChangeHandler={this.onChangeHandler}\n        isEditing={true}\n        isCreating={this.state.isCreating}\n        id={this.props.match.params.id}\n      />\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    singlePost: state.posts.singlePost,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchSinglePost: (id) => dispatch(fetchSinglePost(id)),\n    updatePost: (title, subtitle, text, postId) => dispatch(updatePost(title, subtitle, text, postId)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostEditor);\n","export default function validateAll(field, value) {\n  const validateObject = {\n    text: value => value.replace(/<.+?>/g, '').length <= 2000 && value.replace(/<.+?>/g, '').length >= 100,\n    title: value => value.length <= 60 && value.length >= 3,\n    subtitle: value => value.length <= 80\n  };\n  return validateObject[field] && validateObject[field](value);\n}\n","import React from 'react';\nimport Switch from '@material-ui/core/Switch';\nimport classes from './Toggle.module.css';\n\nexport default function FormControlLabelPosition(props) {\n  return (\n    <div className={classes.main}>\n      <span>{props.left}</span>\n      <Switch disableRipple={true} checked={props.isChecked} onChange={() => props.setIsChecked()} />\n      <span>{props.right}</span>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport Header from '../Header';\nimport classes from './Authorization.module.css';\nimport { Formik, Form, Field } from 'formik';\nimport Toggle from '../Toggle';\n\nconst Authorization = (props) => {\n  const [isChecked, setIsChecked] = useState(false);\n  return (\n    <div>\n      <Header title=\"Authorization\" />\n      <Toggle\n        isChecked={isChecked}\n        setIsChecked={() => setIsChecked(!isChecked)}\n        left=\"Log in\"\n        right=\"Sign up\"\n      />\n      <div className={classes.auth}>\n        <Formik\n          initialValues={{\n            login: '',\n            password: '',\n          }}\n          validationSchema={props.signupSchema}\n          onSubmit={(values) => {\n            isChecked ? props.registerButtonHandler(values) : props.loginButtonHandler(values);\n          }}\n          isValid={false}\n        >\n          {({ errors, touched, isValid }) => (\n            <Form>\n              <label htmlFor=\"usr\">Login:</label>\n              <Field name=\"login\" className=\"form-control\" />\n              {errors.login && touched.login ? (\n                <div className=\"alert alert-danger\">{errors.login}</div>\n              ) : (\n                <br></br>\n              )}\n              <label htmlFor=\"pwd\">Password:</label>\n              <Field name=\"password\" className=\"form-control\" type=\"password\" />\n              {errors.password && touched.password ? (\n                <div className=\"alert alert-danger\">{errors.password}</div>\n              ) : (\n                <br></br>\n              )}\n              {isChecked ? (\n                <button type=\"submit\" className=\"btn btn-primary\" disabled={!isValid}>\n                  Sign up\n                </button>\n              ) : (\n                <button type=\"submit\" className=\"btn btn-info\" disabled={!isValid}>\n                  Log in\n                </button>\n              )}\n            </Form>\n          )}\n        </Formik>\n      </div>\n    </div>\n  );\n};\n\nexport default Authorization;\n","import React, { Component } from 'react';\nimport Authorization from '../components/Authorization';\nimport { loginUser, registerUser } from '../store/actions/auth';\nimport { connect } from 'react-redux';\nimport * as Yup from 'yup';\n\nclass AuthorizationContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      login: '',\n      password: ''\n    };\n  }\n\n  registerButtonHandler = async ({ login, password }) => {\n    await this.props.registerUser(login, password);\n    setTimeout(() => this.props.history.push('/'), 2000);\n  };\n\n  loginButtonHandler = async ({ login, password }) => {\n    await this.props.loginUser(login, password);\n    setTimeout(() => this.props.history.push('/'), 2000);\n  };\n\n  render() {\n    const signupSchema = Yup.object().shape({\n      login: Yup.string()\n        .min(5, 'Too Short!')\n        .max(16, 'Too Long!')\n        .required('Required'),\n      password: Yup.string()\n        .min(5, 'Too Short!')\n        .max(32, 'Too Long!')\n        .required('Required')\n    });\n    return (\n      <Authorization\n        registerButtonHandler={this.registerButtonHandler}\n        loginButtonHandler={this.loginButtonHandler}\n        login={this.state.login}\n        password={this.state.password}\n        signupSchema={signupSchema}\n      />\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    loginUser: (login, password) => dispatch(loginUser(login, password)),\n    registerUser: (login, password) => dispatch(registerUser(login, password))\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(AuthorizationContainer);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\n\nclass PrivateRoute extends Component {\n  render() {\n    const { component: Component, admin, user, isLoggedIn, ...rest } = this.props;\n    return (\n      <Route\n        {...rest}\n        render={props => {\n          if (admin) return user.isAdmin ? <Component {...props} /> : <Redirect to=\"/404\" />;\n          return isLoggedIn ? <Component {...props} /> : <Redirect to=\"/authorization\" />;\n        }}\n      />\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isLoggedIn: state.auth.isLoggedIn,\n    user: state.auth.user\n  };\n}\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React, { Component } from 'react';\nimport Posts from '../../containers/PostsContainer';\nimport Header from '../Header';\nimport { connect } from 'react-redux';\nimport { getUser } from '../../store/actions/users';\n\nclass SomeUserPosts extends Component {\n  componentDidMount() {\n    this.props.getUser(this.props.match.params.id);\n  }\n\n  render() {\n    return (\n      <div>\n        <Header\n          title={`Posts maded by ${this.props.user.login}`}\n          subtitle={`Here you can see ${this.props.user.login}'s posts`}\n        ></Header>\n        <Posts id={this.props.match.params.id} />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.users.user\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getUser: id => dispatch(getUser(id))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SomeUserPosts);\n","import { GET_USER } from './types';\nimport axios from '../../axios';\nimport setErrorText from '../../helpers/setErrorText';\n\nfunction getUserAction(user) {\n  return {\n    type: GET_USER,\n    user,\n  };\n}\nexport function getUser(id) {\n  return async (dispatch) => {\n    try {\n      const res = await axios.get(`/users/${id}`);\n      dispatch(getUserAction(res.data));\n    } catch (e) {\n      setErrorText(e, 'Get user error');\n    }\n  };\n}\n","import React, { Component } from 'react';\nimport Posts from '../../containers/PostsContainer';\nimport Header from '../Header';\nimport Toggle from '../Toggle';\nimport Comments from '../../containers/CommentsContainer';\nimport { connect } from 'react-redux';\nimport { approvePost, removePost } from '../../store/actions/posts';\n\nclass AdminPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isChecked: false,\n    };\n  }\n  onApproveHandle = (postId) => {\n    this.props.approvePost(postId);\n  };\n\n  onRemoveHandle = (postId) => {\n    this.props.removePost(postId);\n  };\n\n  setIsChecked = () => {\n    this.setState({\n      isChecked: !this.state.isChecked,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <Header title=\"Admin Panel\" subtitle=\"Here you can approve or remove new posts or comments\"></Header>\n        <Toggle\n          isChecked={this.state.isChecked}\n          setIsChecked={this.setIsChecked}\n          left=\"Comment\"\n          right=\"Posts\"\n        />\n        {this.state.isChecked ? (\n          <Posts onApproveHandle={this.onApproveHandle} onRemoveHandle={this.onRemoveHandle} admin={true} />\n        ) : (\n          <Comments adminPanel={true} />\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    singlePost: state.posts.singlePost,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    approvePost: (postId) => dispatch(approvePost(postId)),\n    removePost: (postId) => dispatch(removePost(postId)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminPanel);\n","import React from 'react';\nimport './App.css';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport SinglePost from './containers/SinglePostContainer';\nimport Home from './components/Home';\nimport MyPosts from './components/MyPosts';\nimport PostEditor from './components/PostEditor';\nimport Authorization from './containers/AuthoizationContainer';\nimport PrivateRoute from './components/PrivateRoute';\nimport SomeUserPosts from './components/SomeUserPosts';\nimport AdminPanel from './components/AdminPanel';\n\nfunction App() {\n  return (\n    <>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/post/:id\" component={SinglePost} />\n        <Route path=\"/authorization\" component={Authorization} />\n        <PrivateRoute path=\"/my-posts\" component={MyPosts} />\n        <Route path=\"/user-posts/:id\" component={SomeUserPosts} />\n        <Route path=\"/post-edit/:id\" component={PostEditor} />\n        <PrivateRoute admin={true} path=\"/admin\" component={AdminPanel} />\n        <Redirect to=\"/\" />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import {\n  FETCH_POSTS_START,\n  FETCH_POSTS_SUCCESS,\n  FETCH_SINGLE_POST_START,\n  FETCH_SINGLE_POST_SUCCESS,\n  FETCH_SINGLE_POST_ERROR,\n  ADD_COMMENT,\n  REMOVE_COMMENT_ACTION,\n  ADD_LIKE,\n  REMOVE_LIKE,\n  UPDATE_POST\n} from '../actions/types';\n\nconst initialState = {\n  posts: [],\n  singlePost: {},\n  loading: false\n};\n\nexport default function postsReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_POSTS_START:\n      return {\n        ...state,\n        loading: true\n      };\n    case FETCH_POSTS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        posts: action.posts\n      };\n    case FETCH_SINGLE_POST_START:\n      return {\n        ...state,\n        loading: true\n      };\n    case FETCH_SINGLE_POST_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        singlePost: action.singlePost\n      };\n    case FETCH_SINGLE_POST_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: action.error\n      };\n    case ADD_COMMENT:\n      const comments = state.singlePost.comments.slice();\n      comments.push(action.comment);\n      return {\n        ...state,\n        singlePost: { ...state.singlePost, comments }\n      };\n    case REMOVE_COMMENT_ACTION:\n      return {\n        ...state,\n        singlePost: {\n          ...state.singlePost,\n          comments: state.singlePost.comments.filter(comment => comment._id !== action.comment._id)\n        }\n      };\n    case ADD_LIKE:\n      const likes = state.singlePost.likes.slice();\n      likes.push(action.like);\n      return {\n        ...state,\n        singlePost: {\n          ...state.singlePost,\n          likes\n        }\n      };\n    case REMOVE_LIKE:\n      return {\n        ...state,\n        singlePost: {\n          ...state.singlePost,\n          likes: state.singlePost.likes.filter(like => like._id !== action.like._id)\n        }\n      };\n    case UPDATE_POST:\n      return {\n        ...state,\n        singlePost: {\n          ...state.singlePost,\n          ...action.data\n        }\n      };\n    default:\n      return state;\n  }\n}\n","import { SET_USER_INFO, LOG_OUT, SET_USER } from '../actions/types';\n\nlet userInfo = localStorage.getItem('userInfo');\nuserInfo = JSON.parse(userInfo) || {};\nlet user = localStorage.getItem('user');\nuser = JSON.parse(user) || {};\n\nconst initialState = {\n  userId: userInfo.userId,\n  token: userInfo.token,\n  isLoggedIn: !!userInfo.token,\n  user,\n};\n\nexport default function authReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_USER_INFO:\n      return {\n        ...state,\n        userId: action.payload.userId,\n        token: action.payload.token,\n        isLoggedIn: !!userInfo.token,\n      };\n    case LOG_OUT:\n      return {\n        ...state,\n        userId: '',\n        token: '',\n        isLoggedIn: false,\n      };\n    case SET_USER:\n      return {\n        ...state,\n        user: action.user,\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_USER } from '../actions/types';\n\nconst initialState = {\n  user: {}\n};\n\nexport default function usersReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_USER:\n      return {\n        ...state,\n        user: action.user\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_COMMENTS, REMOVE_COMMENT, APPROVE_COMMENT } from '../actions/types';\n\nconst initialState = {\n  comments: []\n};\n\nexport default function commentsReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_COMMENTS:\n      return {\n        ...state,\n        comments: action.comments\n      };\n    case REMOVE_COMMENT:\n      return {\n        ...state,\n        comments: state.comments.filter(comment => comment._id !== action.id)\n      };\n    case APPROVE_COMMENT:\n      let comments = state.comments.map(comment => {\n        if (comment._id === action.id) comment.approved = true;\n        return comment;\n      });\n      return {\n        ...state,\n        comments\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport postsReducer from './posts';\nimport authReducer from './auth';\nimport usersReducer from './users';\nimport commentsReducer from './comments';\n\nexport default combineReducers({\n  posts: postsReducer,\n  auth: authReducer,\n  users: usersReducer,\n  comments: commentsReducer\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './store/reducers';\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers =\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n    : compose;\n\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nif (!localStorage.getItem('user')) localStorage.setItem('user', JSON.stringify({}));\nif (!localStorage.getItem('userInfo')) localStorage.setItem('userInfo', JSON.stringify({}));\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comment\":\"Comments_comment__13XYb\",\"remove\":\"Comments_remove__30r7n\",\"buttons\":\"Comments_buttons__3FWsz\",\"main\":\"Comments_main__1MZE5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Header_main__2r9vH\",\"small\":\"Header_small__1EU7f\",\"h1\":\"Header_h1__31UXp\",\"p\":\"Header_p__XPuGP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Menu_main__T4zCW\",\"links\":\"Menu_links__LQVlq\",\"close\":\"Menu_close__3Adea\",\"burger\":\"Menu_burger__15Dyr\"};"],"sourceRoot":""}